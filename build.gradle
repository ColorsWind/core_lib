import com.github.jengelman.gradle.plugins.shadow.tasks.ConfigureShadowRelocation

plugins {
    id 'java'
    id "idea"
    id "eclipse"
    id "maven-publish"
    id 'java-library'
    id "com.github.johnrengelman.shadow" version "7.0.0"
}

apply plugin: 'maven-publish'

group = 'io.github.divios'
def pluginVersion = '6.4.8'
version = pluginVersion

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

publishing {
    publications {
        gpr(MavenPublication) {
            groupId = group
            artifactId = "core_lib"
            version = version

            from components.java
        }
    }
}

repositories {
    mavenCentral()
    mavenLocal()

    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }

    maven {
        name = 'codemc-snapshots'
        url = 'https://repo.codemc.io/repository/maven-snapshots/'
    }

    maven {
        name = 'codemc-repo'
        url = 'https://repo.codemc.org/repository/maven-public/'
    }

    maven { url 'https://jitpack.io' }

    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }

    maven {
        name = "nms-repo"
        url = "https://repo.codemc.org/repository/nms/"
    }

}

dependencies {
    compileOnly 'com.github.MilkBowl:VaultAPI:1.7'
    compileOnly 'org.spigotmc:spigot-api:1.18.2-R0.1-SNAPSHOT'
    compileOnly 'org.spigotmc:spigot:1.18.2-R0.1-SNAPSHOT'
    api "de.tr7zw:item-nbt-api-plugin:2.9.2"
    api 'com.github.cryptomorin:XSeries:8.7.1'
}

shadowJar {
    //relocate('org.bstats', 'io.github.divios.core_lib.dependencies.bstats')
    //relocate('de.tr7zw', 'io.github.divios.core_lib.dependencies.nbt-api')
    //relocate('com.cryptomorin.xseries', 'io.github.divios.core_lib.dependencies.XSeries')
    //minimize()
}

task updateJars {}

jar.configure {
    actions.clear()
    dependsOn shadowJar
}

shadowJar.configure {
    archiveClassifier.set('')
}

task deploy(dependsOn: ["clean", "jar", "publishing"]) {

}

